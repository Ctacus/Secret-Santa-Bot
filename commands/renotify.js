const Discord   = require('discord.js');
const { query } = require('../mysql');
const config    = require('../json/config.json');
const methods   = require('../utils/methods');

module.exports = {
    name: 'renotify',
    aliases: ['remind'],
    description: '–ù–∞–ø–æ–º–∏–Ω–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞–º, –∫–æ–º—É –æ–Ω–∏ –¥–∞—Ä—è—Ç –ø–æ–¥–∞—Ä–∫–∏!',
    hasArgs: true,
    requirePartner: false,
    worksInDM: true,
    forceDMsOnly: false,
    modOnly: false,
    adminOnly: true,

    execute: async function (message, args, prefix) {
        const row = (await query(`SELECT * FROM users WHERE userId = ${message.author.id}`))[0];
        const exchangeRow = (await query(`SELECT * FROM users INNER JOIN exchange ON users.exchangeId = exchange.exchangeId WHERE userId = ${message.author.id}`))[0];

        if (row.exchangeId === 0) return message.reply('–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –ê–î–ú.');

        if (!exchangeRow || exchangeRow.started === 0) return message.reply('–ê–î–ú –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è!');

        if (!args.length || ['all', 'missed'].indexOf(args[0].toLowerCase()) < 0)
            return message.reply('–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä `missed`, —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å —Ç–µ—Ö, –∫—Ç–æ –ø—Ä–æ–ø—É—Å—Ç–∏–ª –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ª–∏–±–æ `all`, —á—Ç–æ–±—ã –∑–∞–Ω–æ–≤–æ –Ω–∞–ø–æ–º–Ω–∏—Ç—å –≤—Å–µ–º –æ–± –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.');


        const rows = (await query(`SELECT * FROM users WHERE exchangeId = ${row.exchangeId}`
            + (args[0] === 'all' ? `` : ` and notified = 0`)));
        rows.forEach(userRow => {
            const partnerInfo = query(`SELECT * FROM users WHERE userId = ${userRow.partnerId}`);
            const userId = userRow.userId;
            const user = message.client.users.fetch(userId);
            const notifyEmbed = new Discord.MessageEmbed()
                .setTitle('__–ê–Ω–æ–Ω–∏–º–Ω—ã–π –î–µ–¥ –ú–æ—Ä–æ–∑ –≤—Å—ë –µ—â—ë –∏–¥—ë—Ç!__')
                .setDescription('–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—ã –±—ã–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –≤ –∫–∞—á–µ—Å—Ç–≤–µ –î–µ–¥–∞ –ú–æ—Ä–æ–∑–∞ –¥–ª—è: <@' + userRow.partnerId + '> üéÑ'
                    + (!partnerInfo.wishlist ? '' : '\n\n–í–æ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏—è:\n```' + partnerInfo.wishlist + '```') +
                    '\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π `' + prefix + 'message –ø–æ–ª—É—á–∞—Ç–µ–ª—å <—Å–æ–æ–±—â–µ–Ω–∏–µ>`')
                .setFooter('–ï—Å–ª–∏ –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏ –≤—ã –≤–∏–¥–∏—Ç–µ `@invalid-user`, —Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!')
                .setColor(config.embeds_color)

            user.then(u => u.send(notifyEmbed).then(
                ok => query(`UPDATE users SET notified = 1 WHERE userId = ${userId}`),
                notOk => message.reply(`–ö–∞–∂–µ—Ç—Å—è —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ <@${userId}> –≤—Å—ë –µ—â—ë –∑–∞–∫—Ä—ã—Ç—ã –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (${notOk})!`)
            ));
        })

    },
}

